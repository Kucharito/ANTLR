# Generated from PLC_Grammar.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,39,246,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,1,
        0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,
        4,1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,
        10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,
        14,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,18,1,18,1,
        19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,
        25,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,
        28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,
        30,1,30,1,31,1,31,5,31,181,8,31,10,31,12,31,184,9,31,1,32,4,32,187,
        8,32,11,32,12,32,188,1,33,4,33,192,8,33,11,33,12,33,193,1,33,1,33,
        4,33,198,8,33,11,33,12,33,199,1,34,1,34,1,34,1,34,1,34,1,34,1,34,
        1,34,1,34,3,34,211,8,34,1,35,1,35,1,35,1,35,5,35,217,8,35,10,35,
        12,35,220,9,35,1,35,1,35,1,36,3,36,225,8,36,1,36,1,36,1,37,4,37,
        230,8,37,11,37,12,37,231,1,37,1,37,1,38,1,38,1,38,1,38,5,38,240,
        8,38,10,38,12,38,243,9,38,1,38,1,38,0,0,39,1,1,3,2,5,3,7,4,9,5,11,
        6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
        35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,
        57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,
        1,0,6,2,0,65,90,97,122,3,0,48,57,65,90,97,122,1,0,48,57,2,0,34,34,
        92,92,2,0,9,9,32,32,2,0,10,10,13,13,255,0,1,1,0,0,0,0,3,1,0,0,0,
        0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,
        15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,
        25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,
        35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,
        45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,
        55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,
        65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,
        75,1,0,0,0,0,77,1,0,0,0,1,79,1,0,0,0,3,81,1,0,0,0,5,83,1,0,0,0,7,
        88,1,0,0,0,9,94,1,0,0,0,11,96,1,0,0,0,13,98,1,0,0,0,15,101,1,0,0,
        0,17,103,1,0,0,0,19,105,1,0,0,0,21,110,1,0,0,0,23,116,1,0,0,0,25,
        119,1,0,0,0,27,121,1,0,0,0,29,124,1,0,0,0,31,127,1,0,0,0,33,130,
        1,0,0,0,35,133,1,0,0,0,37,135,1,0,0,0,39,137,1,0,0,0,41,139,1,0,
        0,0,43,141,1,0,0,0,45,143,1,0,0,0,47,145,1,0,0,0,49,147,1,0,0,0,
        51,149,1,0,0,0,53,151,1,0,0,0,55,155,1,0,0,0,57,161,1,0,0,0,59,166,
        1,0,0,0,61,173,1,0,0,0,63,178,1,0,0,0,65,186,1,0,0,0,67,191,1,0,
        0,0,69,210,1,0,0,0,71,212,1,0,0,0,73,224,1,0,0,0,75,229,1,0,0,0,
        77,235,1,0,0,0,79,80,5,59,0,0,80,2,1,0,0,0,81,82,5,44,0,0,82,4,1,
        0,0,0,83,84,5,114,0,0,84,85,5,101,0,0,85,86,5,97,0,0,86,87,5,100,
        0,0,87,6,1,0,0,0,88,89,5,119,0,0,89,90,5,114,0,0,90,91,5,105,0,0,
        91,92,5,116,0,0,92,93,5,101,0,0,93,8,1,0,0,0,94,95,5,123,0,0,95,
        10,1,0,0,0,96,97,5,125,0,0,97,12,1,0,0,0,98,99,5,105,0,0,99,100,
        5,102,0,0,100,14,1,0,0,0,101,102,5,40,0,0,102,16,1,0,0,0,103,104,
        5,41,0,0,104,18,1,0,0,0,105,106,5,101,0,0,106,107,5,108,0,0,107,
        108,5,115,0,0,108,109,5,101,0,0,109,20,1,0,0,0,110,111,5,119,0,0,
        111,112,5,104,0,0,112,113,5,105,0,0,113,114,5,108,0,0,114,115,5,
        101,0,0,115,22,1,0,0,0,116,117,5,60,0,0,117,118,5,60,0,0,118,24,
        1,0,0,0,119,120,5,61,0,0,120,26,1,0,0,0,121,122,5,124,0,0,122,123,
        5,124,0,0,123,28,1,0,0,0,124,125,5,38,0,0,125,126,5,38,0,0,126,30,
        1,0,0,0,127,128,5,61,0,0,128,129,5,61,0,0,129,32,1,0,0,0,130,131,
        5,33,0,0,131,132,5,61,0,0,132,34,1,0,0,0,133,134,5,60,0,0,134,36,
        1,0,0,0,135,136,5,62,0,0,136,38,1,0,0,0,137,138,5,43,0,0,138,40,
        1,0,0,0,139,140,5,45,0,0,140,42,1,0,0,0,141,142,5,46,0,0,142,44,
        1,0,0,0,143,144,5,42,0,0,144,46,1,0,0,0,145,146,5,47,0,0,146,48,
        1,0,0,0,147,148,5,37,0,0,148,50,1,0,0,0,149,150,5,33,0,0,150,52,
        1,0,0,0,151,152,5,105,0,0,152,153,5,110,0,0,153,154,5,116,0,0,154,
        54,1,0,0,0,155,156,5,102,0,0,156,157,5,108,0,0,157,158,5,111,0,0,
        158,159,5,97,0,0,159,160,5,116,0,0,160,56,1,0,0,0,161,162,5,98,0,
        0,162,163,5,111,0,0,163,164,5,111,0,0,164,165,5,108,0,0,165,58,1,
        0,0,0,166,167,5,115,0,0,167,168,5,116,0,0,168,169,5,114,0,0,169,
        170,5,105,0,0,170,171,5,110,0,0,171,172,5,103,0,0,172,60,1,0,0,0,
        173,174,5,70,0,0,174,175,5,73,0,0,175,176,5,76,0,0,176,177,5,69,
        0,0,177,62,1,0,0,0,178,182,7,0,0,0,179,181,7,1,0,0,180,179,1,0,0,
        0,181,184,1,0,0,0,182,180,1,0,0,0,182,183,1,0,0,0,183,64,1,0,0,0,
        184,182,1,0,0,0,185,187,7,2,0,0,186,185,1,0,0,0,187,188,1,0,0,0,
        188,186,1,0,0,0,188,189,1,0,0,0,189,66,1,0,0,0,190,192,7,2,0,0,191,
        190,1,0,0,0,192,193,1,0,0,0,193,191,1,0,0,0,193,194,1,0,0,0,194,
        195,1,0,0,0,195,197,5,46,0,0,196,198,7,2,0,0,197,196,1,0,0,0,198,
        199,1,0,0,0,199,197,1,0,0,0,199,200,1,0,0,0,200,68,1,0,0,0,201,202,
        5,116,0,0,202,203,5,114,0,0,203,204,5,117,0,0,204,211,5,101,0,0,
        205,206,5,102,0,0,206,207,5,97,0,0,207,208,5,108,0,0,208,209,5,115,
        0,0,209,211,5,101,0,0,210,201,1,0,0,0,210,205,1,0,0,0,211,70,1,0,
        0,0,212,218,5,34,0,0,213,217,8,3,0,0,214,215,5,92,0,0,215,217,9,
        0,0,0,216,213,1,0,0,0,216,214,1,0,0,0,217,220,1,0,0,0,218,216,1,
        0,0,0,218,219,1,0,0,0,219,221,1,0,0,0,220,218,1,0,0,0,221,222,5,
        34,0,0,222,72,1,0,0,0,223,225,5,13,0,0,224,223,1,0,0,0,224,225,1,
        0,0,0,225,226,1,0,0,0,226,227,5,10,0,0,227,74,1,0,0,0,228,230,7,
        4,0,0,229,228,1,0,0,0,230,231,1,0,0,0,231,229,1,0,0,0,231,232,1,
        0,0,0,232,233,1,0,0,0,233,234,6,37,0,0,234,76,1,0,0,0,235,236,5,
        47,0,0,236,237,5,47,0,0,237,241,1,0,0,0,238,240,8,5,0,0,239,238,
        1,0,0,0,240,243,1,0,0,0,241,239,1,0,0,0,241,242,1,0,0,0,242,244,
        1,0,0,0,243,241,1,0,0,0,244,245,6,38,0,0,245,78,1,0,0,0,11,0,182,
        188,193,199,210,216,218,224,231,241,1,6,0,0
    ]

class PLC_GrammarLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    ID = 32
    INT = 33
    FLOAT = 34
    BOOL = 35
    STRING = 36
    NEWLINE = 37
    WS = 38
    COMMENT = 39

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "','", "'read'", "'write'", "'{'", "'}'", "'if'", "'('", 
            "')'", "'else'", "'while'", "'<<'", "'='", "'||'", "'&&'", "'=='", 
            "'!='", "'<'", "'>'", "'+'", "'-'", "'.'", "'*'", "'/'", "'%'", 
            "'!'", "'int'", "'float'", "'bool'", "'string'", "'FILE'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "INT", "FLOAT", "BOOL", "STRING", "NEWLINE", "WS", "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "ID", "INT", 
                  "FLOAT", "BOOL", "STRING", "NEWLINE", "WS", "COMMENT" ]

    grammarFileName = "PLC_Grammar.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


